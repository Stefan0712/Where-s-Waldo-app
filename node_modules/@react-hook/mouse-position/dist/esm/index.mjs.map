{"version":3,"file":"index.mjs","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport useEvent from '@react-hook/event'\nimport {useThrottleCallback} from '@react-hook/throttle'\n\nfunction useMouse<T extends HTMLElement = HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  options: UseMouseOptions = {}\n): MousePosition {\n  const {fps = 30, enterDelay = 0, leaveDelay = 0} = options\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<UseMouseState, UseMouseAction<T>>\n  >(\n    (state, action): UseMouseState => {\n      const {mouse, context} = state\n      const handleDown = (\n        state: UseMouseState,\n        action:\n          | TouchdownAction<T>\n          | MousedownAction<T>\n          | MousemoveAction<T>\n          | TouchmoveAction<T>\n      ): UseMouseState => {\n        if (typeof window === 'undefined') return state\n        const {event: e, element} = action\n        let event: MouseEvent | TouchEvent['touches'][0]\n        if ('touches' in e) {\n          event = (e as TouchEvent).touches[0]\n        } else {\n          event = e\n        }\n        const {clientX, clientY, screenX, screenY, pageX = 0, pageY = 0} = event\n        const rect = element.getBoundingClientRect()\n        const x = pageX - rect.left - (window.pageXOffset || window.scrollX)\n        const y = pageY - rect.top - (window.pageYOffset || window.scrollY)\n        // shims a mouseleave event for touch devices\n        if (\n          'touches' in e &&\n          (x < 0 || y < 0 || x > rect.width || y > rect.height)\n        ) {\n          return {\n            ...state,\n            context: {\n              ...state.context,\n              hoverStatus: 'leave',\n              touchStatus: 'end',\n            },\n          }\n        }\n\n        return {\n          context: {\n            ...state.context,\n            hoverStatus: 'enter',\n          },\n          mouse: {\n            ...state.mouse,\n            x,\n            y,\n            pageX,\n            pageY,\n            clientX,\n            clientY,\n            screenX,\n            screenY,\n            elementWidth: rect.width,\n            elementHeight: rect.height,\n            isOver: true,\n            isTouch: 'touches' in e,\n          },\n        }\n      }\n\n      if (action.type === 'mousemove') {\n        // Bails out if touch has ended\n        if (context.touchStatus === 'end') return state\n        return handleDown(state, action)\n      } else if (action.type === 'touchmove') {\n        const nextState: UseMouseState = {\n          context: {\n            ...context,\n            touchStatus: 'start',\n          },\n          mouse,\n        }\n\n        return handleDown(nextState, action)\n      } else if (action.type === 'touchdown') {\n        const nextState: UseMouseState = {\n          context: {\n            ...context,\n            touchStatus: 'start',\n          },\n          mouse: {\n            ...mouse,\n            isDown: true,\n          },\n        }\n\n        return handleDown(nextState, action)\n      } else if (action.type === 'mousedown') {\n        return {\n          context,\n          mouse: {\n            ...mouse,\n            isDown: true,\n          },\n        }\n      } else if (action.type === 'mouseup') {\n        return {context, mouse: {...mouse, isDown: false}}\n      } else if (action.type === 'mouseleave') {\n        return {\n          context: {\n            ...context,\n            hoverStatus: 'leave',\n          },\n          mouse: {...mouse, isOver: false},\n        }\n      } else if (action.type === 'touchleave') {\n        return {\n          context: {...context, hoverStatus: 'leave', touchStatus: 'end'},\n          mouse: {...mouse, isOver: false, isDown: false},\n        }\n      } else if (action.type === 'activeStatus') {\n        return {\n          context: {...context, activeStatus: action.value},\n          mouse,\n        }\n      }\n\n      return state\n    },\n    {\n      mouse: initialState,\n      context: initialContext,\n    }\n  )\n\n  const onMove = useThrottleCallback(\n    (event: MouseEvent | TouchEvent) => {\n      const element = target && 'current' in target ? target.current : target\n      if (!element) return\n      dispatch({type: 'mousemove', event, element})\n    },\n    fps,\n    true\n  )\n  const onTouchMove = useThrottleCallback(\n    (event: MouseEvent | TouchEvent) => {\n      const element = target && 'current' in target ? target.current : target\n      if (!element) return\n      dispatch({type: 'touchmove', event, element})\n    },\n    fps,\n    true\n  )\n  const onLeave = useThrottleCallback(\n    () => dispatch({type: 'mouseleave'}),\n    fps,\n    // This has to be false because we always want this callback to fire after any\n    // move events.\n    false\n  )\n  const onDown = useThrottleCallback(\n    (event: MouseEvent | TouchEvent) => {\n      const element = target && 'current' in target ? target.current : target\n      if (!element) return\n      dispatch(\n        'touches' in event\n          ? {\n              type: 'touchdown',\n              element,\n              event: event,\n            }\n          : {\n              type: 'mousedown',\n              element,\n              event: event,\n            }\n      )\n    },\n    fps,\n    true\n  )\n  const onUp = useThrottleCallback(\n    () => dispatch({type: 'mouseup'}),\n    fps,\n    // This has to be false because we always want this callback to fire after any\n    // down events.\n    false\n  )\n  const onTouchEnd = useThrottleCallback(\n    () => dispatch({type: 'touchleave'}),\n    fps,\n    // This has to be false because we always want this callback to fire after any\n    // move events.\n    false\n  )\n\n  useEvent(target, 'mouseenter', onMove)\n  useEvent(target, 'mousemove', onMove)\n  useEvent(target, 'mouseleave', onLeave)\n  useEvent(target, 'mousedown', onDown)\n  useEvent(typeof window !== 'undefined' ? window : null, 'mousedown', onDown)\n  useEvent(typeof window !== 'undefined' ? window : null, 'mouseup', onUp)\n  useEvent(target, 'touchstart', onDown)\n  useEvent(target, 'touchmove', onTouchMove)\n  useEvent(target, 'touchend', onTouchEnd)\n  useEvent(target, 'touchcancel', onTouchEnd)\n\n  React.useEffect(() => {\n    if (state.context.hoverStatus === 'enter') {\n      if (enterDelay) {\n        const timeout = setTimeout(\n          () => dispatch({type: 'activeStatus', value: 'active'}),\n          enterDelay\n        )\n        return () => clearTimeout(timeout)\n      }\n\n      dispatch({type: 'activeStatus', value: 'active'})\n    } else {\n      if (leaveDelay) {\n        const timeout = setTimeout(\n          () => dispatch({type: 'activeStatus', value: 'inactive'}),\n          leaveDelay\n        )\n        return () => clearTimeout(timeout)\n      }\n\n      dispatch({type: 'activeStatus', value: 'inactive'})\n    }\n  }, [state.context.hoverStatus, enterDelay, leaveDelay])\n\n  return state.context.activeStatus === 'active' ? state.mouse : initialState\n}\n\nconst initialState: MousePosition = {\n  x: null,\n  y: null,\n  pageX: null,\n  pageY: null,\n  clientX: null,\n  clientY: null,\n  screenX: null,\n  screenY: null,\n  elementWidth: null,\n  elementHeight: null,\n  isOver: false,\n  isDown: false,\n  isTouch: false,\n}\n\nconst initialContext: UseMouseState['context'] = {\n  hoverStatus: 'idle',\n  touchStatus: 'idle',\n  activeStatus: 'inactive',\n}\n\ninterface UseMouseState {\n  mouse: MousePosition\n  context: {\n    hoverStatus: 'idle' | 'enter' | 'leave'\n    touchStatus: 'idle' | 'start' | 'end'\n    activeStatus: 'inactive' | 'active'\n  }\n}\n\ntype UseMouseAction<T extends HTMLElement> =\n  | MousemoveAction<T>\n  | {\n      type: 'activeStatus'\n      value: UseMouseState['context']['activeStatus']\n    }\n  | {\n      type: 'mouseleave'\n    }\n  | {\n      type: 'touchleave'\n    }\n  | {\n      type: 'mouseup'\n    }\n  | TouchdownAction<T>\n  | MousedownAction<T>\n  | TouchmoveAction<T>\n\ntype TouchdownAction<T> = {\n  type: 'touchdown'\n  element: T\n  event: TouchEvent\n}\n\ntype MousedownAction<T> = {\n  type: 'mousedown'\n  element: T\n  event: MouseEvent\n}\n\ntype MousemoveAction<T> = {\n  type: 'mousemove'\n  element: T\n  event: MouseEvent | TouchEvent\n}\n\ntype TouchmoveAction<T> = {\n  type: 'touchmove'\n  element: T\n  event: MouseEvent | TouchEvent\n}\n\nexport interface UseMouseOptions {\n  enterDelay?: number\n  leaveDelay?: number\n  fps?: number\n}\n\nexport interface MousePosition {\n  x: number | null\n  y: number | null\n  pageX: number | null\n  pageY: number | null\n  clientX: number | null\n  clientY: number | null\n  screenX: number | null\n  screenY: number | null\n  elementWidth: number | null\n  elementHeight: number | null\n  isOver: boolean\n  isDown: boolean\n  isTouch: boolean\n}\n\nexport default useMouse\n"],"names":["state","action","window","event","e","element","touches","clientX","clientY","screenX","screenY","pageX","pageY","rect","getBoundingClientRect","x","left","pageXOffset","scrollX","y","top","pageYOffset","scrollY","width","height","context","hoverStatus","touchStatus","mouse","elementWidth","elementHeight","isOver","isTouch","handleDown","type","isDown","activeStatus","value","initialState","initialContext","target","options","dispatch","fps","enterDelay","leaveDelay","React","onMove","useThrottleCallback","current","onTouchMove","onLeave","onDown","onUp","onTouchEnd","useEvent","timeout","setTimeout","clearTimeout"],"mappings":"+MAcyB,WACjBA,EACAC,MAMsB,oBAAXC,OAAwB,OAAOF,MAEtCG,GADGA,MAAOC,EAARC,QAAWA,GAAWJ,EAG1BE,EADE,YAAaC,EACNA,EAAiBE,QAAQ,GAE1BF,MAEJG,QAACA,EAADC,QAAUA,EAAVC,QAAmBA,EAAnBC,QAA4BA,EAA5BC,MAAqCA,EAAQ,EAA7CC,MAAgDA,EAAQ,GAAKT,EAC7DU,EAAOR,EAAQS,wBACfC,EAAIJ,EAAQE,EAAKG,MAAQd,OAAOe,aAAef,OAAOgB,SACtDC,EAAIP,EAAQC,EAAKO,KAAOlB,OAAOmB,aAAenB,OAAOoB,eAGzD,YAAalB,IACR,EAAJW,GAAa,EAAJI,GAASJ,EAAIF,EAAKU,OAASJ,EAAIN,EAAKW,aAGzCxB,GACHyB,aACKzB,EAAMyB,SACTC,YAAa,QACbC,YAAa,UAKZ,CACLF,aACKzB,EAAMyB,SACTC,YAAa,UAEfE,WACK5B,EAAM4B,OACTb,EAAAA,EACAI,EAAAA,EACAR,MAAAA,EACAC,MAAAA,EACAL,QAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAmB,aAAchB,EAAKU,MACnBO,cAAejB,EAAKW,OACpBO,OAAQ,EACRC,QAAS,YAAa5B,KAvD9B,WAACJ,EAAOC,OACA2B,MAACA,EAADH,QAAQA,GAAWzB,EACnBiC,UA0Dc,cAAhBhC,EAAOiC,KAEmB,QAAxBT,EAAQE,YAA8B3B,EACnCiC,EAAWjC,EAAOC,GACA,cAAhBA,EAAOiC,KASTD,EAR0B,CAC/BR,aACKA,GACHE,YAAa,UAEfC,MAAAA,GAG2B3B,GACJ,cAAhBA,EAAOiC,KAYTD,EAX0B,CAC/BR,aACKA,GACHE,YAAa,UAEfC,WACKA,GACHO,OAAQ,KAIiBlC,GACJ,cAAhBA,EAAOiC,KACT,CACLT,QAAAA,EACAG,WACKA,GACHO,OAAQ,KAGa,YAAhBlC,EAAOiC,KACT,CAACT,QAAAA,EAASG,WAAWA,GAAOO,OAAQ,KAClB,eAAhBlC,EAAOiC,KACT,CACLT,aACKA,GACHC,YAAa,UAEfE,WAAWA,GAAOG,OAAQ,KAEH,eAAhB9B,EAAOiC,KACT,CACLT,aAAaA,GAASC,YAAa,QAASC,YAAa,QACzDC,WAAWA,GAAOG,OAAQ,EAAOI,OAAQ,KAElB,iBAAhBlC,EAAOiC,KACT,CACLT,aAAaA,GAASW,aAAcnC,EAAOoC,QAC3CT,MAAAA,GAIG5B,gJA2Gb,IAAMsC,EAA8B,CAClCvB,EAAG,KACHI,EAAG,KACHR,MAAO,KACPC,MAAO,KACPL,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTmB,aAAc,KACdC,cAAe,KACfC,OAAQ,EACRI,OAAQ,EACRH,QAAS,GAGLO,EAA2C,CAC/Cb,YAAa,OACbC,YAAa,OACbS,aAAc,2BA3PhB,SACEI,EACAC,uBA+McC,EAAS,CAACR,KAAM,eAAgBG,MAAO,+BAUvCK,EAAS,CAACR,KAAM,eAAgBG,MAAO,sBAzNrDI,IAAAA,EAA2B,QAErBE,IAACA,EAAM,GAAPC,WAAWA,EAAa,EAAxBC,WAA2BA,EAAa,GAAKJ,GAC5CzC,EAAO0C,GAAYI,IA0HxB,CACElB,MAAOU,EACPb,QAASc,IAIPQ,EAASC,EACZ7C,QACOE,EAAUmC,GAAU,YAAaA,EAASA,EAAOS,QAAUT,EAC5DnC,GACLqC,EAAS,CAACR,KAAM,YAAa/B,MAAAA,EAAOE,QAAAA,KAEtCsC,EACA,GAEIO,EAAcF,EACjB7C,QACOE,EAAUmC,GAAU,YAAaA,EAASA,EAAOS,QAAUT,EAC5DnC,GACLqC,EAAS,CAACR,KAAM,YAAa/B,MAAAA,EAAOE,QAAAA,KAEtCsC,EACA,GAEIQ,EAAUH,EACd,IAAMN,EAAS,CAACR,KAAM,eACtBS,KAKIS,EAASJ,EACZ7C,QACOE,EAAUmC,GAAU,YAAaA,EAASA,EAAOS,QAAUT,EAC5DnC,GACLqC,EACE,YAAavC,EACT,CACE+B,KAAM,YACN7B,QAAAA,EACAF,MAAOA,GAET,CACE+B,KAAM,YACN7B,QAAAA,EACAF,MAAOA,KAIjBwC,EACA,GAEIU,EAAOL,EACX,IAAMN,EAAS,CAACR,KAAM,YACtBS,KAKIW,EAAaN,EACjB,IAAMN,EAAS,CAACR,KAAM,eACtBS,YAMFY,EAASf,EAAQ,aAAcO,GAC/BQ,EAASf,EAAQ,YAAaO,GAC9BQ,EAASf,EAAQ,aAAcW,GAC/BI,EAASf,EAAQ,YAAaY,GAC9BG,EAA2B,oBAAXrD,OAAyBA,OAAS,KAAM,YAAakD,GACrEG,EAA2B,oBAAXrD,OAAyBA,OAAS,KAAM,UAAWmD,GACnEE,EAASf,EAAQ,aAAcY,GAC/BG,EAASf,EAAQ,YAAaU,GAC9BK,EAASf,EAAQ,WAAYc,GAC7BC,EAASf,EAAQ,cAAec,GAEhCR,EAAgB,QACoB,UAA9B9C,EAAMyB,QAAQC,YAAyB,IACrCkB,EAAY,KACRY,EAAUC,aAEdb,SAEK,IAAMc,aAAaF,GAG5Bd,EAAS,CAACR,KAAM,eAAgBG,MAAO,eAClC,IACDQ,EAAY,KACRW,EAAUC,aAEdZ,SAEK,IAAMa,aAAaF,GAG5Bd,EAAS,CAACR,KAAM,eAAgBG,MAAO,eAExC,CAACrC,EAAMyB,QAAQC,YAAakB,EAAYC,IAEL,WAA/B7C,EAAMyB,QAAQW,aAA4BpC,EAAM4B,MAAQU"}